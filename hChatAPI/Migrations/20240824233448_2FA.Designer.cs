// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hChatAPI.Services;

#nullable disable

namespace hChatAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240824233448_2FA")]
    partial class _2FA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hChatAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PubKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RevocationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("hChatAPI.Models.User2FA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Is2FAEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("SecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("User2FA");
                });

            modelBuilder.Entity("hChatAPI.Models.UserBackupCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HashedCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("User2FAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User2FAId");

                    b.ToTable("UserBackupCode");
                });

            modelBuilder.Entity("hChatAPI.Models.User2FA", b =>
                {
                    b.HasOne("hChatAPI.Models.User", "User")
                        .WithOne("User2FA")
                        .HasForeignKey("hChatAPI.Models.User2FA", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("hChatAPI.Models.UserBackupCode", b =>
                {
                    b.HasOne("hChatAPI.Models.User2FA", "User2FA")
                        .WithMany("BackupCodes")
                        .HasForeignKey("User2FAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User2FA");
                });

            modelBuilder.Entity("hChatAPI.Models.User", b =>
                {
                    b.Navigation("User2FA")
                        .IsRequired();
                });

            modelBuilder.Entity("hChatAPI.Models.User2FA", b =>
                {
                    b.Navigation("BackupCodes");
                });
#pragma warning restore 612, 618
        }
    }
}
